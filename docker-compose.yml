services:
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    volumes:
      - ./src:/var/www
    ports:
      - "8088:80"
    environment:
      - "DB_PORT=3306"
      - "DB_HOST=mysql"
      - "XDG_CONFIG_HOME=/app"
    depends_on:
      - php-fpm
      - node

  php-fpm:
    build:
      context: ./docker/php-fpm
      dockerfile: Dockerfile
    volumes:
      - ./src:/var/www
    environment:
      - "DB_PORT=3306"
      - "DB_HOST=mysql"
      - "REDIS_PORT=6379"
      - "REDIS_HOST=redis"
    depends_on:
      - mysql
      - redis
      - node

  php-cli:
    build:
      context: ./docker/php-fpm
      dockerfile: Dockerfile
    volumes:
      - ./src:/var/www
    environment:
      - "DB_PORT=3306"
      - "DB_HOST=mysql"
      - "COMPOSER_MEMORY_LIMIT=-1"
    depends_on:
      - mysql
    tty: true

  mysql:
    image: mysql:8.4
    volumes:
      - database:/var/lib/mysql
    environment:
      - "MYSQL_ROOT_PASSWORD=secret"
      - "MYSQL_USER=user"
      - "MYSQL_PASSWORD=secret"
      - "MYSQL_DATABASE=laravel"
    ports:
      - "33061:3306"

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    environment:
      - PMA_HOST=mysql
      - PMA_USER=user
      - PMA_PASSWORD=secret
      - UPLOAD_LIMIT=64M
    restart: always
    ports:
      - "8081:80"

  node:
    image: node:20-alpine
    ports:
      - "3000:3000"
    volumes:
      - ./src:/var/www
    working_dir: /var/www
    tty: true

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  queue:
    build:
      context: ./docker/php-fpm
      dockerfile: Dockerfile
    volumes:
      - ./src:/var/www
    command: php artisan queue:work
    depends_on:
      - mysql
      - redis
    environment:
      - "DB_HOST=mysql"
      - "REDIS_HOST=redis"
    tty: true

  whisper:
    build:
      context: ./whisper
      dockerfile: Dockerfile
    container_name: whisper
    volumes:
      - ./src/storage/app/public:/data
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [ gpu ]
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    ports:
      - "9000:9000"


volumes:
  database: